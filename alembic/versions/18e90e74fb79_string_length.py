"""String length

Revision ID: 18e90e74fb79
Revises: 
Create Date: 2025-03-19 21:58:43.342713

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '18e90e74fb79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cow_breeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('breed', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('places', sa.String(length=255), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('synonyms', sa.String(length=255), nullable=True),
    sa.Column('origin', sa.String(length=255), nullable=True),
    sa.Column('major_utility', sa.String(length=255), nullable=True),
    sa.Column('comments_on_utility', sa.String(length=255), nullable=True),
    sa.Column('comments_on_breeding_tract', sa.String(length=255), nullable=True),
    sa.Column('adaptability_to_environment', sa.String(length=255), nullable=True),
    sa.Column('management_system', sa.String(length=255), nullable=True),
    sa.Column('mobility', sa.String(length=255), nullable=True),
    sa.Column('feeding_of_adults', sa.String(length=255), nullable=True),
    sa.Column('comments_on_management', sa.String(length=255), nullable=True),
    sa.Column('colour', sa.String(length=255), nullable=True),
    sa.Column('horn_shape_and_size', sa.String(length=255), nullable=True),
    sa.Column('visible_characteristics', sa.String(length=255), nullable=True),
    sa.Column('height_avg_cm', sa.Float(), nullable=True),
    sa.Column('body_length_avg_cm', sa.Float(), nullable=True),
    sa.Column('heart_girth_avg_cm', sa.Float(), nullable=True),
    sa.Column('body_weight_avg_kg', sa.Float(), nullable=True),
    sa.Column('birth_weight_avg_kg', sa.Float(), nullable=True),
    sa.Column('litter_size_born', sa.Integer(), nullable=True),
    sa.Column('age_at_first_parturition_months', sa.Integer(), nullable=True),
    sa.Column('parturition_interval_months', sa.Integer(), nullable=True),
    sa.Column('milk_yield_per_lactation_kg', sa.Float(), nullable=True),
    sa.Column('milk_fat_percent', sa.Float(), nullable=True),
    sa.Column('peculiarity_of_breed', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=255), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('oauthID', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('oauthID')
    )
    op.create_table('cows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('breed_id', sa.Integer(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('health_status', sa.String(length=255), nullable=True),
    sa.Column('milk_production', sa.Float(), nullable=True),
    sa.Column('work', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['breed_id'], ['cow_breeds.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diseases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('date_diagnosed', sa.Date(), nullable=True),
    sa.Column('treatment', sa.String(length=255), nullable=True),
    sa.Column('cow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cow_id'], ['cows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cow_diseases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cow_id', sa.Integer(), nullable=False),
    sa.Column('disease_id', sa.Integer(), nullable=False),
    sa.Column('outcome', sa.String(length=255), nullable=True),
    sa.Column('diagnosis_date', sa.Date(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('treatment_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['cow_id'], ['cows.id'], ),
    sa.ForeignKeyConstraint(['disease_id'], ['diseases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('test')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('cow_diseases')
    op.drop_table('diseases')
    op.drop_table('cows')
    op.drop_table('users')
    op.drop_table('cow_breeds')
    # ### end Alembic commands ###
